!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
SYSCALL_DEFINE0	syscalls.h	170
SYSCALL_DEFINE1	syscalls.h	174
SYSCALL_DEFINE2	syscalls.h	175
SYSCALL_DEFINE3	syscalls.h	176
SYSCALL_DEFINE4	syscalls.h	177
SYSCALL_DEFINE5	syscalls.h	178
SYSCALL_DEFINE6	syscalls.h	179
SYSCALL_DEFINEx	syscalls.h	181
SYSCALL_METADATA	syscalls.h	143
SYSCALL_METADATA	syscalls.h	167
SYSCALL_TRACE_ENTER_EVENT	syscalls.h	115
SYSCALL_TRACE_EXIT_EVENT	syscalls.h	129
_LINUX_SYSCALLS_H	syscalls.h	12
__MAP	syscalls.h	97
__MAP0	syscalls.h	90
__MAP1	syscalls.h	91
__MAP2	syscalls.h	92
__MAP3	syscalls.h	93
__MAP4	syscalls.h	94
__MAP5	syscalls.h	95
__MAP6	syscalls.h	96
__PROTECT	syscalls.h	185
__SC_ARGS	syscalls.h	103
__SC_CAST	syscalls.h	102
__SC_DECL	syscalls.h	99
__SC_LONG	syscalls.h	101
__SC_STR_ADECL	syscalls.h	107
__SC_STR_TDECL	syscalls.h	108
__SC_TEST	syscalls.h	104
__SYSCALL_DEFINEx	syscalls.h	186
__TYPE_IS_LL	syscalls.h	100
sys_accept	syscalls.h	/^asmlinkage long sys_accept(int, struct sockaddr __user *, int __user *);$/;"	signature:(int, struct sockaddr __user *, int __user *)
sys_accept4	syscalls.h	/^asmlinkage long sys_accept4(int, struct sockaddr __user *, int __user *, int);$/;"	signature:(int, struct sockaddr __user *, int __user *, int)
sys_access	syscalls.h	/^asmlinkage long sys_access(const char __user *filename, int mode);$/;"	signature:(const char __user *filename, int mode)
sys_acct	syscalls.h	/^asmlinkage long sys_acct(const char __user *name);$/;"	signature:(const char __user *name)
sys_add_key	syscalls.h	/^asmlinkage long sys_add_key(const char __user *_type,$/;"	signature:(const char __user *_type, const char __user *_description, const void __user *_payload, size_t plen, key_serial_t destringid)
sys_adjtimex	syscalls.h	/^asmlinkage long sys_adjtimex(struct timex __user *txc_p);$/;"	signature:(struct timex __user *txc_p)
sys_alarm	syscalls.h	/^asmlinkage long sys_alarm(unsigned int seconds);$/;"	signature:(unsigned int seconds)
sys_bdflush	syscalls.h	/^asmlinkage long sys_bdflush(int func, long data);$/;"	signature:(int func, long data)
sys_bind	syscalls.h	/^asmlinkage long sys_bind(int, struct sockaddr __user *, int);$/;"	signature:(int, struct sockaddr __user *, int)
sys_brk	syscalls.h	/^asmlinkage long sys_brk(unsigned long brk);$/;"	signature:(unsigned long brk)
sys_capget	syscalls.h	/^asmlinkage long sys_capget(cap_user_header_t header,$/;"	signature:(cap_user_header_t header, cap_user_data_t dataptr)
sys_capset	syscalls.h	/^asmlinkage long sys_capset(cap_user_header_t header,$/;"	signature:(cap_user_header_t header, const cap_user_data_t data)
sys_chdir	syscalls.h	/^asmlinkage long sys_chdir(const char __user *filename);$/;"	signature:(const char __user *filename)
sys_chmod	syscalls.h	/^asmlinkage long sys_chmod(const char __user *filename, umode_t mode);$/;"	signature:(const char __user *filename, umode_t mode)
sys_chown	syscalls.h	/^asmlinkage long sys_chown(const char __user *filename,$/;"	signature:(const char __user *filename, uid_t user, gid_t group)
sys_chown16	syscalls.h	/^asmlinkage long sys_chown16(const char __user *filename,$/;"	signature:(const char __user *filename, old_uid_t user, old_gid_t group)
sys_chroot	syscalls.h	/^asmlinkage long sys_chroot(const char __user *filename);$/;"	signature:(const char __user *filename)
sys_clock_adjtime	syscalls.h	/^asmlinkage long sys_clock_adjtime(clockid_t which_clock,$/;"	signature:(clockid_t which_clock, struct timex __user *tx)
sys_clock_getres	syscalls.h	/^asmlinkage long sys_clock_getres(clockid_t which_clock,$/;"	signature:(clockid_t which_clock, struct timespec __user *tp)
sys_clock_gettime	syscalls.h	/^asmlinkage long sys_clock_gettime(clockid_t which_clock,$/;"	signature:(clockid_t which_clock, struct timespec __user *tp)
sys_clock_nanosleep	syscalls.h	/^asmlinkage long sys_clock_nanosleep(clockid_t which_clock, int flags,$/;"	signature:(clockid_t which_clock, int flags, const struct timespec __user *rqtp, struct timespec __user *rmtp)
sys_clock_settime	syscalls.h	/^asmlinkage long sys_clock_settime(clockid_t which_clock,$/;"	signature:(clockid_t which_clock, const struct timespec __user *tp)
sys_clone	syscalls.h	/^asmlinkage long sys_clone(unsigned long, unsigned long, int __user *, int,$/;"	signature:(unsigned long, unsigned long, int __user *, int, int __user *)
sys_clone	syscalls.h	/^asmlinkage long sys_clone(unsigned long, unsigned long, int __user *,$/;"	signature:(unsigned long, unsigned long, int __user *, int __user *, int)
sys_clone	syscalls.h	/^asmlinkage long sys_clone(unsigned long, unsigned long, int, int __user *,$/;"	signature:(unsigned long, unsigned long, int, int __user *, int __user *, int)
sys_close	syscalls.h	/^asmlinkage long sys_close(unsigned int fd);$/;"	signature:(unsigned int fd)
sys_connect	syscalls.h	/^asmlinkage long sys_connect(int, struct sockaddr __user *, int);$/;"	signature:(int, struct sockaddr __user *, int)
sys_creat	syscalls.h	/^asmlinkage long sys_creat(const char __user *pathname, umode_t mode);$/;"	signature:(const char __user *pathname, umode_t mode)
sys_delete_module	syscalls.h	/^asmlinkage long sys_delete_module(const char __user *name_user,$/;"	signature:(const char __user *name_user, unsigned int flags)
sys_dup	syscalls.h	/^asmlinkage long sys_dup(unsigned int fildes);$/;"	signature:(unsigned int fildes)
sys_dup2	syscalls.h	/^asmlinkage long sys_dup2(unsigned int oldfd, unsigned int newfd);$/;"	signature:(unsigned int oldfd, unsigned int newfd)
sys_dup3	syscalls.h	/^asmlinkage long sys_dup3(unsigned int oldfd, unsigned int newfd, int flags);$/;"	signature:(unsigned int oldfd, unsigned int newfd, int flags)
sys_epoll_create	syscalls.h	/^asmlinkage long sys_epoll_create(int size);$/;"	signature:(int size)
sys_epoll_create1	syscalls.h	/^asmlinkage long sys_epoll_create1(int flags);$/;"	signature:(int flags)
sys_epoll_ctl	syscalls.h	/^asmlinkage long sys_epoll_ctl(int epfd, int op, int fd,$/;"	signature:(int epfd, int op, int fd, struct epoll_event __user *event)
sys_epoll_pwait	syscalls.h	/^asmlinkage long sys_epoll_pwait(int epfd, struct epoll_event __user *events,$/;"	signature:(int epfd, struct epoll_event __user *events, int maxevents, int timeout, const sigset_t __user *sigmask, size_t sigsetsize)
sys_epoll_wait	syscalls.h	/^asmlinkage long sys_epoll_wait(int epfd, struct epoll_event __user *events,$/;"	signature:(int epfd, struct epoll_event __user *events, int maxevents, int timeout)
sys_eventfd	syscalls.h	/^asmlinkage long sys_eventfd(unsigned int count);$/;"	signature:(unsigned int count)
sys_eventfd2	syscalls.h	/^asmlinkage long sys_eventfd2(unsigned int count, int flags);$/;"	signature:(unsigned int count, int flags)
sys_execve	syscalls.h	/^asmlinkage long sys_execve(const char __user *filename,$/;"	signature:(const char __user *filename, const char __user *const __user *argv, const char __user *const __user *envp)
sys_exit	syscalls.h	/^asmlinkage long sys_exit(int error_code);$/;"	signature:(int error_code)
sys_exit_group	syscalls.h	/^asmlinkage long sys_exit_group(int error_code);$/;"	signature:(int error_code)
sys_faccessat	syscalls.h	/^asmlinkage long sys_faccessat(int dfd, const char __user *filename, int mode);$/;"	signature:(int dfd, const char __user *filename, int mode)
sys_fadvise64	syscalls.h	/^asmlinkage long sys_fadvise64(int fd, loff_t offset, size_t len, int advice);$/;"	signature:(int fd, loff_t offset, size_t len, int advice)
sys_fadvise64_64	syscalls.h	/^asmlinkage long sys_fadvise64_64(int fd, loff_t offset, loff_t len, int advice);$/;"	signature:(int fd, loff_t offset, loff_t len, int advice)
sys_fallocate	syscalls.h	/^asmlinkage long sys_fallocate(int fd, int mode, loff_t offset, loff_t len);$/;"	signature:(int fd, int mode, loff_t offset, loff_t len)
sys_fanotify_init	syscalls.h	/^asmlinkage long sys_fanotify_init(unsigned int flags, unsigned int event_f_flags);$/;"	signature:(unsigned int flags, unsigned int event_f_flags)
sys_fanotify_mark	syscalls.h	/^asmlinkage long sys_fanotify_mark(int fanotify_fd, unsigned int flags,$/;"	signature:(int fanotify_fd, unsigned int flags, u64 mask, int fd, const char __user *pathname)
sys_fchdir	syscalls.h	/^asmlinkage long sys_fchdir(unsigned int fd);$/;"	signature:(unsigned int fd)
sys_fchmod	syscalls.h	/^asmlinkage long sys_fchmod(unsigned int fd, umode_t mode);$/;"	signature:(unsigned int fd, umode_t mode)
sys_fchmodat	syscalls.h	/^asmlinkage long sys_fchmodat(int dfd, const char __user * filename,$/;"	signature:(int dfd, const char __user * filename, umode_t mode)
sys_fchown	syscalls.h	/^asmlinkage long sys_fchown(unsigned int fd, uid_t user, gid_t group);$/;"	signature:(unsigned int fd, uid_t user, gid_t group)
sys_fchown16	syscalls.h	/^asmlinkage long sys_fchown16(unsigned int fd, old_uid_t user, old_gid_t group);$/;"	signature:(unsigned int fd, old_uid_t user, old_gid_t group)
sys_fchownat	syscalls.h	/^asmlinkage long sys_fchownat(int dfd, const char __user *filename, uid_t user,$/;"	signature:(int dfd, const char __user *filename, uid_t user, gid_t group, int flag)
sys_fcntl	syscalls.h	/^asmlinkage long sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg);$/;"	signature:(unsigned int fd, unsigned int cmd, unsigned long arg)
sys_fcntl64	syscalls.h	/^asmlinkage long sys_fcntl64(unsigned int fd,$/;"	signature:(unsigned int fd, unsigned int cmd, unsigned long arg)
sys_fdatasync	syscalls.h	/^asmlinkage long sys_fdatasync(unsigned int fd);$/;"	signature:(unsigned int fd)
sys_fgetxattr	syscalls.h	/^asmlinkage long sys_fgetxattr(int fd, const char __user *name,$/;"	signature:(int fd, const char __user *name, void __user *value, size_t size)
sys_finit_module	syscalls.h	/^asmlinkage long sys_finit_module(int fd, const char __user *uargs, int flags);$/;"	signature:(int fd, const char __user *uargs, int flags)
sys_flistxattr	syscalls.h	/^asmlinkage long sys_flistxattr(int fd, char __user *list, size_t size);$/;"	signature:(int fd, char __user *list, size_t size)
sys_flock	syscalls.h	/^asmlinkage long sys_flock(unsigned int fd, unsigned int cmd);$/;"	signature:(unsigned int fd, unsigned int cmd)
sys_fork	syscalls.h	/^asmlinkage long sys_fork(void);$/;"	signature:(void)
sys_fremovexattr	syscalls.h	/^asmlinkage long sys_fremovexattr(int fd, const char __user *name);$/;"	signature:(int fd, const char __user *name)
sys_fsetxattr	syscalls.h	/^asmlinkage long sys_fsetxattr(int fd, const char __user *name,$/;"	signature:(int fd, const char __user *name, const void __user *value, size_t size, int flags)
sys_fstat	syscalls.h	/^asmlinkage long sys_fstat(unsigned int fd,$/;"	signature:(unsigned int fd, struct __old_kernel_stat __user *statbuf)
sys_fstat64	syscalls.h	/^asmlinkage long sys_fstat64(unsigned long fd, struct stat64 __user *statbuf);$/;"	signature:(unsigned long fd, struct stat64 __user *statbuf)
sys_fstatat64	syscalls.h	/^asmlinkage long sys_fstatat64(int dfd, const char __user *filename,$/;"	signature:(int dfd, const char __user *filename, struct stat64 __user *statbuf, int flag)
sys_fstatfs	syscalls.h	/^asmlinkage long sys_fstatfs(unsigned int fd, struct statfs __user *buf);$/;"	signature:(unsigned int fd, struct statfs __user *buf)
sys_fstatfs64	syscalls.h	/^asmlinkage long sys_fstatfs64(unsigned int fd, size_t sz,$/;"	signature:(unsigned int fd, size_t sz, struct statfs64 __user *buf)
sys_fsync	syscalls.h	/^asmlinkage long sys_fsync(unsigned int fd);$/;"	signature:(unsigned int fd)
sys_ftruncate	syscalls.h	/^asmlinkage long sys_ftruncate(unsigned int fd, unsigned long length);$/;"	signature:(unsigned int fd, unsigned long length)
sys_ftruncate64	syscalls.h	/^asmlinkage long sys_ftruncate64(unsigned int fd, loff_t length);$/;"	signature:(unsigned int fd, loff_t length)
sys_futex	syscalls.h	/^asmlinkage long sys_futex(u32 __user *uaddr, int op, u32 val,$/;"	signature:(u32 __user *uaddr, int op, u32 val, struct timespec __user *utime, u32 __user *uaddr2, u32 val3)
sys_futimesat	syscalls.h	/^asmlinkage long sys_futimesat(int dfd, const char __user *filename,$/;"	signature:(int dfd, const char __user *filename, struct timeval __user *utimes)
sys_get_mempolicy	syscalls.h	/^asmlinkage long sys_get_mempolicy(int __user *policy,$/;"	signature:(int __user *policy, unsigned long __user *nmask, unsigned long maxnode, unsigned long addr, unsigned long flags)
sys_get_robust_list	syscalls.h	/^asmlinkage long sys_get_robust_list(int pid,$/;"	signature:(int pid, struct robust_list_head __user * __user *head_ptr, size_t __user *len_ptr)
sys_getcpu	syscalls.h	/^asmlinkage long sys_getcpu(unsigned __user *cpu, unsigned __user *node, struct getcpu_cache __user *cache);$/;"	signature:(unsigned __user *cpu, unsigned __user *node, struct getcpu_cache __user *cache)
sys_getcwd	syscalls.h	/^asmlinkage long sys_getcwd(char __user *buf, unsigned long size);$/;"	signature:(char __user *buf, unsigned long size)
sys_getdents	syscalls.h	/^asmlinkage long sys_getdents(unsigned int fd,$/;"	signature:(unsigned int fd, struct linux_dirent __user *dirent, unsigned int count)
sys_getdents64	syscalls.h	/^asmlinkage long sys_getdents64(unsigned int fd,$/;"	signature:(unsigned int fd, struct linux_dirent64 __user *dirent, unsigned int count)
sys_getegid	syscalls.h	/^asmlinkage long sys_getegid(void);$/;"	signature:(void)
sys_getegid16	syscalls.h	/^asmlinkage long sys_getegid16(void);$/;"	signature:(void)
sys_geteuid	syscalls.h	/^asmlinkage long sys_geteuid(void);$/;"	signature:(void)
sys_geteuid16	syscalls.h	/^asmlinkage long sys_geteuid16(void);$/;"	signature:(void)
sys_getgid	syscalls.h	/^asmlinkage long sys_getgid(void);$/;"	signature:(void)
sys_getgid16	syscalls.h	/^asmlinkage long sys_getgid16(void);$/;"	signature:(void)
sys_getgroups	syscalls.h	/^asmlinkage long sys_getgroups(int gidsetsize, gid_t __user *grouplist);$/;"	signature:(int gidsetsize, gid_t __user *grouplist)
sys_getgroups16	syscalls.h	/^asmlinkage long sys_getgroups16(int gidsetsize, old_gid_t __user *grouplist);$/;"	signature:(int gidsetsize, old_gid_t __user *grouplist)
sys_gethostname	syscalls.h	/^asmlinkage long sys_gethostname(char __user *name, int len);$/;"	signature:(char __user *name, int len)
sys_getitimer	syscalls.h	/^asmlinkage long sys_getitimer(int which, struct itimerval __user *value);$/;"	signature:(int which, struct itimerval __user *value)
sys_getpeername	syscalls.h	/^asmlinkage long sys_getpeername(int, struct sockaddr __user *, int __user *);$/;"	signature:(int, struct sockaddr __user *, int __user *)
sys_getpgid	syscalls.h	/^asmlinkage long sys_getpgid(pid_t pid);$/;"	signature:(pid_t pid)
sys_getpgrp	syscalls.h	/^asmlinkage long sys_getpgrp(void);$/;"	signature:(void)
sys_getpid	syscalls.h	/^asmlinkage long sys_getpid(void);$/;"	signature:(void)
sys_getppid	syscalls.h	/^asmlinkage long sys_getppid(void);$/;"	signature:(void)
sys_getpriority	syscalls.h	/^asmlinkage long sys_getpriority(int which, int who);$/;"	signature:(int which, int who)
sys_getresgid	syscalls.h	/^asmlinkage long sys_getresgid(gid_t __user *rgid, gid_t __user *egid, gid_t __user *sgid);$/;"	signature:(gid_t __user *rgid, gid_t __user *egid, gid_t __user *sgid)
sys_getresgid16	syscalls.h	/^asmlinkage long sys_getresgid16(old_gid_t __user *rgid,$/;"	signature:(old_gid_t __user *rgid, old_gid_t __user *egid, old_gid_t __user *sgid)
sys_getresuid	syscalls.h	/^asmlinkage long sys_getresuid(uid_t __user *ruid, uid_t __user *euid, uid_t __user *suid);$/;"	signature:(uid_t __user *ruid, uid_t __user *euid, uid_t __user *suid)
sys_getresuid16	syscalls.h	/^asmlinkage long sys_getresuid16(old_uid_t __user *ruid,$/;"	signature:(old_uid_t __user *ruid, old_uid_t __user *euid, old_uid_t __user *suid)
sys_getrlimit	syscalls.h	/^asmlinkage long sys_getrlimit(unsigned int resource,$/;"	signature:(unsigned int resource, struct rlimit __user *rlim)
sys_getrusage	syscalls.h	/^asmlinkage long sys_getrusage(int who, struct rusage __user *ru);$/;"	signature:(int who, struct rusage __user *ru)
sys_getsid	syscalls.h	/^asmlinkage long sys_getsid(pid_t pid);$/;"	signature:(pid_t pid)
sys_getsockname	syscalls.h	/^asmlinkage long sys_getsockname(int, struct sockaddr __user *, int __user *);$/;"	signature:(int, struct sockaddr __user *, int __user *)
sys_getsockopt	syscalls.h	/^asmlinkage long sys_getsockopt(int fd, int level, int optname,$/;"	signature:(int fd, int level, int optname, char __user *optval, int __user *optlen)
sys_gettid	syscalls.h	/^asmlinkage long sys_gettid(void);$/;"	signature:(void)
sys_gettimeofday	syscalls.h	/^asmlinkage long sys_gettimeofday(struct timeval __user *tv,$/;"	signature:(struct timeval __user *tv, struct timezone __user *tz)
sys_getuid	syscalls.h	/^asmlinkage long sys_getuid(void);$/;"	signature:(void)
sys_getuid16	syscalls.h	/^asmlinkage long sys_getuid16(void);$/;"	signature:(void)
sys_getxattr	syscalls.h	/^asmlinkage long sys_getxattr(const char __user *path, const char __user *name,$/;"	signature:(const char __user *path, const char __user *name, void __user *value, size_t size)
sys_init_module	syscalls.h	/^asmlinkage long sys_init_module(void __user *umod, unsigned long len,$/;"	signature:(void __user *umod, unsigned long len, const char __user *uargs)
sys_inotify_add_watch	syscalls.h	/^asmlinkage long sys_inotify_add_watch(int fd, const char __user *path,$/;"	signature:(int fd, const char __user *path, u32 mask)
sys_inotify_init	syscalls.h	/^asmlinkage long sys_inotify_init(void);$/;"	signature:(void)
sys_inotify_init1	syscalls.h	/^asmlinkage long sys_inotify_init1(int flags);$/;"	signature:(int flags)
sys_inotify_rm_watch	syscalls.h	/^asmlinkage long sys_inotify_rm_watch(int fd, __s32 wd);$/;"	signature:(int fd, __s32 wd)
sys_io_cancel	syscalls.h	/^asmlinkage long sys_io_cancel(aio_context_t ctx_id, struct iocb __user *iocb,$/;"	signature:(aio_context_t ctx_id, struct iocb __user *iocb, struct io_event __user *result)
sys_io_destroy	syscalls.h	/^asmlinkage long sys_io_destroy(aio_context_t ctx);$/;"	signature:(aio_context_t ctx)
sys_io_getevents	syscalls.h	/^asmlinkage long sys_io_getevents(aio_context_t ctx_id,$/;"	signature:(aio_context_t ctx_id, long min_nr, long nr, struct io_event __user *events, struct timespec __user *timeout)
sys_io_setup	syscalls.h	/^asmlinkage long sys_io_setup(unsigned nr_reqs, aio_context_t __user *ctx);$/;"	signature:(unsigned nr_reqs, aio_context_t __user *ctx)
sys_io_submit	syscalls.h	/^asmlinkage long sys_io_submit(aio_context_t, long,$/;"	signature:(aio_context_t, long, struct iocb __user * __user *)
sys_ioctl	syscalls.h	/^asmlinkage long sys_ioctl(unsigned int fd, unsigned int cmd,$/;"	signature:(unsigned int fd, unsigned int cmd, unsigned long arg)
sys_ioperm	syscalls.h	/^asmlinkage long sys_ioperm(unsigned long from, unsigned long num, int on);$/;"	signature:(unsigned long from, unsigned long num, int on)
sys_ioprio_get	syscalls.h	/^asmlinkage long sys_ioprio_get(int which, int who);$/;"	signature:(int which, int who)
sys_ioprio_set	syscalls.h	/^asmlinkage long sys_ioprio_set(int which, int who, int ioprio);$/;"	signature:(int which, int who, int ioprio)
sys_ipc	syscalls.h	/^asmlinkage long sys_ipc(unsigned int call, int first, unsigned long second,$/;"	signature:(unsigned int call, int first, unsigned long second, unsigned long third, void __user *ptr, long fifth)
sys_kcmp	syscalls.h	/^asmlinkage long sys_kcmp(pid_t pid1, pid_t pid2, int type,$/;"	signature:(pid_t pid1, pid_t pid2, int type, unsigned long idx1, unsigned long idx2)
sys_kexec_load	syscalls.h	/^asmlinkage long sys_kexec_load(unsigned long entry, unsigned long nr_segments,$/;"	signature:(unsigned long entry, unsigned long nr_segments, struct kexec_segment __user *segments, unsigned long flags)
sys_keyctl	syscalls.h	/^asmlinkage long sys_keyctl(int cmd, unsigned long arg2, unsigned long arg3,$/;"	signature:(int cmd, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5)
sys_kill	syscalls.h	/^asmlinkage long sys_kill(int pid, int sig);$/;"	signature:(int pid, int sig)
sys_lchown	syscalls.h	/^asmlinkage long sys_lchown(const char __user *filename,$/;"	signature:(const char __user *filename, uid_t user, gid_t group)
sys_lchown16	syscalls.h	/^asmlinkage long sys_lchown16(const char __user *filename,$/;"	signature:(const char __user *filename, old_uid_t user, old_gid_t group)
sys_lgetxattr	syscalls.h	/^asmlinkage long sys_lgetxattr(const char __user *path, const char __user *name,$/;"	signature:(const char __user *path, const char __user *name, void __user *value, size_t size)
sys_link	syscalls.h	/^asmlinkage long sys_link(const char __user *oldname,$/;"	signature:(const char __user *oldname, const char __user *newname)
sys_linkat	syscalls.h	/^asmlinkage long sys_linkat(int olddfd, const char __user *oldname,$/;"	signature:(int olddfd, const char __user *oldname, int newdfd, const char __user *newname, int flags)
sys_listen	syscalls.h	/^asmlinkage long sys_listen(int, int);$/;"	signature:(int, int)
sys_listxattr	syscalls.h	/^asmlinkage long sys_listxattr(const char __user *path, char __user *list,$/;"	signature:(const char __user *path, char __user *list, size_t size)
sys_llistxattr	syscalls.h	/^asmlinkage long sys_llistxattr(const char __user *path, char __user *list,$/;"	signature:(const char __user *path, char __user *list, size_t size)
sys_llseek	syscalls.h	/^asmlinkage long sys_llseek(unsigned int fd, unsigned long offset_high,$/;"	signature:(unsigned int fd, unsigned long offset_high, unsigned long offset_low, loff_t __user *result, unsigned int whence)
sys_lookup_dcookie	syscalls.h	/^asmlinkage long sys_lookup_dcookie(u64 cookie64, char __user *buf, size_t len);$/;"	signature:(u64 cookie64, char __user *buf, size_t len)
sys_lremovexattr	syscalls.h	/^asmlinkage long sys_lremovexattr(const char __user *path,$/;"	signature:(const char __user *path, const char __user *name)
sys_lseek	syscalls.h	/^asmlinkage long sys_lseek(unsigned int fd, off_t offset,$/;"	signature:(unsigned int fd, off_t offset, unsigned int whence)
sys_lsetxattr	syscalls.h	/^asmlinkage long sys_lsetxattr(const char __user *path, const char __user *name,$/;"	signature:(const char __user *path, const char __user *name, const void __user *value, size_t size, int flags)
sys_lstat	syscalls.h	/^asmlinkage long sys_lstat(const char __user *filename,$/;"	signature:(const char __user *filename, struct __old_kernel_stat __user *statbuf)
sys_lstat64	syscalls.h	/^asmlinkage long sys_lstat64(const char __user *filename,$/;"	signature:(const char __user *filename, struct stat64 __user *statbuf)
sys_madvise	syscalls.h	/^asmlinkage long sys_madvise(unsigned long start, size_t len, int behavior);$/;"	signature:(unsigned long start, size_t len, int behavior)
sys_mbind	syscalls.h	/^asmlinkage long sys_mbind(unsigned long start, unsigned long len,$/;"	signature:(unsigned long start, unsigned long len, unsigned long mode, unsigned long __user *nmask, unsigned long maxnode, unsigned flags)
sys_migrate_pages	syscalls.h	/^asmlinkage long sys_migrate_pages(pid_t pid, unsigned long maxnode,$/;"	signature:(pid_t pid, unsigned long maxnode, const unsigned long __user *from, const unsigned long __user *to)
sys_mincore	syscalls.h	/^asmlinkage long sys_mincore(unsigned long start, size_t len,$/;"	signature:(unsigned long start, size_t len, unsigned char __user * vec)
sys_mkdir	syscalls.h	/^asmlinkage long sys_mkdir(const char __user *pathname, umode_t mode);$/;"	signature:(const char __user *pathname, umode_t mode)
sys_mkdirat	syscalls.h	/^asmlinkage long sys_mkdirat(int dfd, const char __user * pathname, umode_t mode);$/;"	signature:(int dfd, const char __user * pathname, umode_t mode)
sys_mknod	syscalls.h	/^asmlinkage long sys_mknod(const char __user *filename, umode_t mode,$/;"	signature:(const char __user *filename, umode_t mode, unsigned dev)
sys_mknodat	syscalls.h	/^asmlinkage long sys_mknodat(int dfd, const char __user * filename, umode_t mode,$/;"	signature:(int dfd, const char __user * filename, umode_t mode, unsigned dev)
sys_mlock	syscalls.h	/^asmlinkage long sys_mlock(unsigned long start, size_t len);$/;"	signature:(unsigned long start, size_t len)
sys_mlockall	syscalls.h	/^asmlinkage long sys_mlockall(int flags);$/;"	signature:(int flags)
sys_mmap_pgoff	syscalls.h	/^asmlinkage long sys_mmap_pgoff(unsigned long addr, unsigned long len,$/;"	signature:(unsigned long addr, unsigned long len, unsigned long prot, unsigned long flags, unsigned long fd, unsigned long pgoff)
sys_mount	syscalls.h	/^asmlinkage long sys_mount(char __user *dev_name, char __user *dir_name,$/;"	signature:(char __user *dev_name, char __user *dir_name, char __user *type, unsigned long flags, void __user *data)
sys_move_pages	syscalls.h	/^asmlinkage long sys_move_pages(pid_t pid, unsigned long nr_pages,$/;"	signature:(pid_t pid, unsigned long nr_pages, const void __user * __user *pages, const int __user *nodes, int __user *status, int flags)
sys_mprotect	syscalls.h	/^asmlinkage long sys_mprotect(unsigned long start, size_t len,$/;"	signature:(unsigned long start, size_t len, unsigned long prot)
sys_mq_getsetattr	syscalls.h	/^asmlinkage long sys_mq_getsetattr(mqd_t mqdes, const struct mq_attr __user *mqstat, struct mq_attr __user *omqstat);$/;"	signature:(mqd_t mqdes, const struct mq_attr __user *mqstat, struct mq_attr __user *omqstat)
sys_mq_notify	syscalls.h	/^asmlinkage long sys_mq_notify(mqd_t mqdes, const struct sigevent __user *notification);$/;"	signature:(mqd_t mqdes, const struct sigevent __user *notification)
sys_mq_open	syscalls.h	/^asmlinkage long sys_mq_open(const char __user *name, int oflag, umode_t mode, struct mq_attr __user *attr);$/;"	signature:(const char __user *name, int oflag, umode_t mode, struct mq_attr __user *attr)
sys_mq_timedreceive	syscalls.h	/^asmlinkage long sys_mq_timedreceive(mqd_t mqdes, char __user *msg_ptr, size_t msg_len, unsigned int __user *msg_prio, const struct timespec __user *abs_timeout);$/;"	signature:(mqd_t mqdes, char __user *msg_ptr, size_t msg_len, unsigned int __user *msg_prio, const struct timespec __user *abs_timeout)
sys_mq_timedsend	syscalls.h	/^asmlinkage long sys_mq_timedsend(mqd_t mqdes, const char __user *msg_ptr, size_t msg_len, unsigned int msg_prio, const struct timespec __user *abs_timeout);$/;"	signature:(mqd_t mqdes, const char __user *msg_ptr, size_t msg_len, unsigned int msg_prio, const struct timespec __user *abs_timeout)
sys_mq_unlink	syscalls.h	/^asmlinkage long sys_mq_unlink(const char __user *name);$/;"	signature:(const char __user *name)
sys_mremap	syscalls.h	/^asmlinkage long sys_mremap(unsigned long addr,$/;"	signature:(unsigned long addr, unsigned long old_len, unsigned long new_len, unsigned long flags, unsigned long new_addr)
sys_msgctl	syscalls.h	/^asmlinkage long sys_msgctl(int msqid, int cmd, struct msqid_ds __user *buf);$/;"	signature:(int msqid, int cmd, struct msqid_ds __user *buf)
sys_msgget	syscalls.h	/^asmlinkage long sys_msgget(key_t key, int msgflg);$/;"	signature:(key_t key, int msgflg)
sys_msgrcv	syscalls.h	/^asmlinkage long sys_msgrcv(int msqid, struct msgbuf __user *msgp,$/;"	signature:(int msqid, struct msgbuf __user *msgp, size_t msgsz, long msgtyp, int msgflg)
sys_msgsnd	syscalls.h	/^asmlinkage long sys_msgsnd(int msqid, struct msgbuf __user *msgp,$/;"	signature:(int msqid, struct msgbuf __user *msgp, size_t msgsz, int msgflg)
sys_msync	syscalls.h	/^asmlinkage long sys_msync(unsigned long start, size_t len, int flags);$/;"	signature:(unsigned long start, size_t len, int flags)
sys_munlock	syscalls.h	/^asmlinkage long sys_munlock(unsigned long start, size_t len);$/;"	signature:(unsigned long start, size_t len)
sys_munlockall	syscalls.h	/^asmlinkage long sys_munlockall(void);$/;"	signature:(void)
sys_munmap	syscalls.h	/^asmlinkage long sys_munmap(unsigned long addr, size_t len);$/;"	signature:(unsigned long addr, size_t len)
sys_name_to_handle_at	syscalls.h	/^asmlinkage long sys_name_to_handle_at(int dfd, const char __user *name,$/;"	signature:(int dfd, const char __user *name, struct file_handle __user *handle, int __user *mnt_id, int flag)
sys_nanosleep	syscalls.h	/^asmlinkage long sys_nanosleep(struct timespec __user *rqtp, struct timespec __user *rmtp);$/;"	signature:(struct timespec __user *rqtp, struct timespec __user *rmtp)
sys_newfstat	syscalls.h	/^asmlinkage long sys_newfstat(unsigned int fd, struct stat __user *statbuf);$/;"	signature:(unsigned int fd, struct stat __user *statbuf)
sys_newfstatat	syscalls.h	/^asmlinkage long sys_newfstatat(int dfd, const char __user *filename,$/;"	signature:(int dfd, const char __user *filename, struct stat __user *statbuf, int flag)
sys_newlstat	syscalls.h	/^asmlinkage long sys_newlstat(const char __user *filename,$/;"	signature:(const char __user *filename, struct stat __user *statbuf)
sys_newstat	syscalls.h	/^asmlinkage long sys_newstat(const char __user *filename,$/;"	signature:(const char __user *filename, struct stat __user *statbuf)
sys_newuname	syscalls.h	/^asmlinkage long sys_newuname(struct new_utsname __user *name);$/;"	signature:(struct new_utsname __user *name)
sys_ni_syscall	syscalls.h	/^asmlinkage long sys_ni_syscall(void);$/;"	signature:(void)
sys_nice	syscalls.h	/^asmlinkage long sys_nice(int increment);$/;"	signature:(int increment)
sys_old_getrlimit	syscalls.h	/^asmlinkage long sys_old_getrlimit(unsigned int resource, struct rlimit __user *rlim);$/;"	signature:(unsigned int resource, struct rlimit __user *rlim)
sys_old_mmap	syscalls.h	/^asmlinkage long sys_old_mmap(struct mmap_arg_struct __user *arg);$/;"	signature:(struct mmap_arg_struct __user *arg)
sys_old_readdir	syscalls.h	/^asmlinkage long sys_old_readdir(unsigned int, struct old_linux_dirent __user *, unsigned int);$/;"	signature:(unsigned int, struct old_linux_dirent __user *, unsigned int)
sys_old_select	syscalls.h	/^asmlinkage long sys_old_select(struct sel_arg_struct __user *arg);$/;"	signature:(struct sel_arg_struct __user *arg)
sys_oldumount	syscalls.h	/^asmlinkage long sys_oldumount(char __user *name);$/;"	signature:(char __user *name)
sys_olduname	syscalls.h	/^asmlinkage long sys_olduname(struct oldold_utsname __user *);$/;"	signature:(struct oldold_utsname __user *)
sys_open	syscalls.h	/^asmlinkage long sys_open(const char __user *filename,$/;"	signature:(const char __user *filename, int flags, umode_t mode)
sys_open_by_handle_at	syscalls.h	/^asmlinkage long sys_open_by_handle_at(int mountdirfd,$/;"	signature:(int mountdirfd, struct file_handle __user *handle, int flags)
sys_openat	syscalls.h	/^asmlinkage long sys_openat(int dfd, const char __user *filename, int flags,$/;"	signature:(int dfd, const char __user *filename, int flags, umode_t mode)
sys_pause	syscalls.h	/^asmlinkage long sys_pause(void);$/;"	signature:(void)
sys_pciconfig_iobase	syscalls.h	/^asmlinkage long sys_pciconfig_iobase(long which, unsigned long bus, unsigned long devfn);$/;"	signature:(long which, unsigned long bus, unsigned long devfn)
sys_pciconfig_read	syscalls.h	/^asmlinkage long sys_pciconfig_read(unsigned long bus, unsigned long dfn,$/;"	signature:(unsigned long bus, unsigned long dfn, unsigned long off, unsigned long len, void __user *buf)
sys_pciconfig_write	syscalls.h	/^asmlinkage long sys_pciconfig_write(unsigned long bus, unsigned long dfn,$/;"	signature:(unsigned long bus, unsigned long dfn, unsigned long off, unsigned long len, void __user *buf)
sys_perf_event_open	syscalls.h	/^asmlinkage long sys_perf_event_open($/;"	signature:( struct perf_event_attr __user *attr_uptr, pid_t pid, int cpu, int group_fd, unsigned long flags)
sys_personality	syscalls.h	/^asmlinkage long sys_personality(unsigned int personality);$/;"	signature:(unsigned int personality)
sys_pipe	syscalls.h	/^asmlinkage long sys_pipe(int __user *fildes);$/;"	signature:(int __user *fildes)
sys_pipe2	syscalls.h	/^asmlinkage long sys_pipe2(int __user *fildes, int flags);$/;"	signature:(int __user *fildes, int flags)
sys_pivot_root	syscalls.h	/^asmlinkage long sys_pivot_root(const char __user *new_root,$/;"	signature:(const char __user *new_root, const char __user *put_old)
sys_poll	syscalls.h	/^asmlinkage long sys_poll(struct pollfd __user *ufds, unsigned int nfds,$/;"	signature:(struct pollfd __user *ufds, unsigned int nfds, int timeout)
sys_ppoll	syscalls.h	/^asmlinkage long sys_ppoll(struct pollfd __user *, unsigned int,$/;"	signature:(struct pollfd __user *, unsigned int, struct timespec __user *, const sigset_t __user *, size_t)
sys_prctl	syscalls.h	/^asmlinkage long sys_prctl(int option, unsigned long arg2, unsigned long arg3,$/;"	signature:(int option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5)
sys_pread64	syscalls.h	/^asmlinkage long sys_pread64(unsigned int fd, char __user *buf,$/;"	signature:(unsigned int fd, char __user *buf, size_t count, loff_t pos)
sys_preadv	syscalls.h	/^asmlinkage long sys_preadv(unsigned long fd, const struct iovec __user *vec,$/;"	signature:(unsigned long fd, const struct iovec __user *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h)
sys_prlimit64	syscalls.h	/^asmlinkage long sys_prlimit64(pid_t pid, unsigned int resource,$/;"	signature:(pid_t pid, unsigned int resource, const struct rlimit64 __user *new_rlim, struct rlimit64 __user *old_rlim)
sys_process_vm_readv	syscalls.h	/^asmlinkage long sys_process_vm_readv(pid_t pid,$/;"	signature:(pid_t pid, const struct iovec __user *lvec, unsigned long liovcnt, const struct iovec __user *rvec, unsigned long riovcnt, unsigned long flags)
sys_process_vm_writev	syscalls.h	/^asmlinkage long sys_process_vm_writev(pid_t pid,$/;"	signature:(pid_t pid, const struct iovec __user *lvec, unsigned long liovcnt, const struct iovec __user *rvec, unsigned long riovcnt, unsigned long flags)
sys_pselect6	syscalls.h	/^asmlinkage long sys_pselect6(int, fd_set __user *, fd_set __user *,$/;"	signature:(int, fd_set __user *, fd_set __user *, fd_set __user *, struct timespec __user *, void __user *)
sys_ptrace	syscalls.h	/^asmlinkage long sys_ptrace(long request, long pid, unsigned long addr,$/;"	signature:(long request, long pid, unsigned long addr, unsigned long data)
sys_pwrite64	syscalls.h	/^asmlinkage long sys_pwrite64(unsigned int fd, const char __user *buf,$/;"	signature:(unsigned int fd, const char __user *buf, size_t count, loff_t pos)
sys_pwritev	syscalls.h	/^asmlinkage long sys_pwritev(unsigned long fd, const struct iovec __user *vec,$/;"	signature:(unsigned long fd, const struct iovec __user *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h)
sys_quotactl	syscalls.h	/^asmlinkage long sys_quotactl(unsigned int cmd, const char __user *special,$/;"	signature:(unsigned int cmd, const char __user *special, qid_t id, void __user *addr)
sys_read	syscalls.h	/^asmlinkage long sys_read(unsigned int fd, char __user *buf, size_t count);$/;"	signature:(unsigned int fd, char __user *buf, size_t count)
sys_readahead	syscalls.h	/^asmlinkage long sys_readahead(int fd, loff_t offset, size_t count);$/;"	signature:(int fd, loff_t offset, size_t count)
sys_readlink	syscalls.h	/^asmlinkage long sys_readlink(const char __user *path,$/;"	signature:(const char __user *path, char __user *buf, int bufsiz)
sys_readlinkat	syscalls.h	/^asmlinkage long sys_readlinkat(int dfd, const char __user *path, char __user *buf,$/;"	signature:(int dfd, const char __user *path, char __user *buf, int bufsiz)
sys_readv	syscalls.h	/^asmlinkage long sys_readv(unsigned long fd,$/;"	signature:(unsigned long fd, const struct iovec __user *vec, unsigned long vlen)
sys_reboot	syscalls.h	/^asmlinkage long sys_reboot(int magic1, int magic2, unsigned int cmd,$/;"	signature:(int magic1, int magic2, unsigned int cmd, void __user *arg)
sys_recv	syscalls.h	/^asmlinkage long sys_recv(int, void __user *, size_t, unsigned);$/;"	signature:(int, void __user *, size_t, unsigned)
sys_recvfrom	syscalls.h	/^asmlinkage long sys_recvfrom(int, void __user *, size_t, unsigned,$/;"	signature:(int, void __user *, size_t, unsigned, struct sockaddr __user *, int __user *)
sys_recvmmsg	syscalls.h	/^asmlinkage long sys_recvmmsg(int fd, struct mmsghdr __user *msg,$/;"	signature:(int fd, struct mmsghdr __user *msg, unsigned int vlen, unsigned flags, struct timespec __user *timeout)
sys_recvmsg	syscalls.h	/^asmlinkage long sys_recvmsg(int fd, struct msghdr __user *msg, unsigned flags);$/;"	signature:(int fd, struct msghdr __user *msg, unsigned flags)
sys_remap_file_pages	syscalls.h	/^asmlinkage long sys_remap_file_pages(unsigned long start, unsigned long size,$/;"	signature:(unsigned long start, unsigned long size, unsigned long prot, unsigned long pgoff, unsigned long flags)
sys_removexattr	syscalls.h	/^asmlinkage long sys_removexattr(const char __user *path,$/;"	signature:(const char __user *path, const char __user *name)
sys_rename	syscalls.h	/^asmlinkage long sys_rename(const char __user *oldname,$/;"	signature:(const char __user *oldname, const char __user *newname)
sys_renameat	syscalls.h	/^asmlinkage long sys_renameat(int olddfd, const char __user * oldname,$/;"	signature:(int olddfd, const char __user * oldname, int newdfd, const char __user * newname)
sys_request_key	syscalls.h	/^asmlinkage long sys_request_key(const char __user *_type,$/;"	signature:(const char __user *_type, const char __user *_description, const char __user *_callout_info, key_serial_t destringid)
sys_restart_syscall	syscalls.h	/^asmlinkage long sys_restart_syscall(void);$/;"	signature:(void)
sys_rmdir	syscalls.h	/^asmlinkage long sys_rmdir(const char __user *pathname);$/;"	signature:(const char __user *pathname)
sys_rt_sigaction	syscalls.h	/^asmlinkage long sys_rt_sigaction(int,$/;"	signature:(int, const struct sigaction __user *, struct sigaction __user *, size_t)
sys_rt_sigpending	syscalls.h	/^asmlinkage long sys_rt_sigpending(sigset_t __user *set, size_t sigsetsize);$/;"	signature:(sigset_t __user *set, size_t sigsetsize)
sys_rt_sigprocmask	syscalls.h	/^asmlinkage long sys_rt_sigprocmask(int how, sigset_t __user *set,$/;"	signature:(int how, sigset_t __user *set, sigset_t __user *oset, size_t sigsetsize)
sys_rt_sigqueueinfo	syscalls.h	/^asmlinkage long sys_rt_sigqueueinfo(int pid, int sig, siginfo_t __user *uinfo);$/;"	signature:(int pid, int sig, siginfo_t __user *uinfo)
sys_rt_sigsuspend	syscalls.h	/^asmlinkage long sys_rt_sigsuspend(sigset_t __user *unewset, size_t sigsetsize);$/;"	signature:(sigset_t __user *unewset, size_t sigsetsize)
sys_rt_sigtimedwait	syscalls.h	/^asmlinkage long sys_rt_sigtimedwait(const sigset_t __user *uthese,$/;"	signature:(const sigset_t __user *uthese, siginfo_t __user *uinfo, const struct timespec __user *uts, size_t sigsetsize)
sys_rt_tgsigqueueinfo	syscalls.h	/^asmlinkage long sys_rt_tgsigqueueinfo(pid_t tgid, pid_t  pid, int sig,$/;"	signature:(pid_t tgid, pid_t pid, int sig, siginfo_t __user *uinfo)
sys_sched_get_priority_max	syscalls.h	/^asmlinkage long sys_sched_get_priority_max(int policy);$/;"	signature:(int policy)
sys_sched_get_priority_min	syscalls.h	/^asmlinkage long sys_sched_get_priority_min(int policy);$/;"	signature:(int policy)
sys_sched_getaffinity	syscalls.h	/^asmlinkage long sys_sched_getaffinity(pid_t pid, unsigned int len,$/;"	signature:(pid_t pid, unsigned int len, unsigned long __user *user_mask_ptr)
sys_sched_getparam	syscalls.h	/^asmlinkage long sys_sched_getparam(pid_t pid,$/;"	signature:(pid_t pid, struct sched_param __user *param)
sys_sched_getscheduler	syscalls.h	/^asmlinkage long sys_sched_getscheduler(pid_t pid);$/;"	signature:(pid_t pid)
sys_sched_rr_get_interval	syscalls.h	/^asmlinkage long sys_sched_rr_get_interval(pid_t pid,$/;"	signature:(pid_t pid, struct timespec __user *interval)
sys_sched_setaffinity	syscalls.h	/^asmlinkage long sys_sched_setaffinity(pid_t pid, unsigned int len,$/;"	signature:(pid_t pid, unsigned int len, unsigned long __user *user_mask_ptr)
sys_sched_setparam	syscalls.h	/^asmlinkage long sys_sched_setparam(pid_t pid,$/;"	signature:(pid_t pid, struct sched_param __user *param)
sys_sched_setscheduler	syscalls.h	/^asmlinkage long sys_sched_setscheduler(pid_t pid, int policy,$/;"	signature:(pid_t pid, int policy, struct sched_param __user *param)
sys_sched_yield	syscalls.h	/^asmlinkage long sys_sched_yield(void);$/;"	signature:(void)
sys_seccomp	syscalls.h	/^asmlinkage long sys_seccomp(unsigned int op, unsigned int flags,$/;"	signature:(unsigned int op, unsigned int flags, const char __user *uargs)
sys_select	syscalls.h	/^asmlinkage long sys_select(int n, fd_set __user *inp, fd_set __user *outp,$/;"	signature:(int n, fd_set __user *inp, fd_set __user *outp, fd_set __user *exp, struct timeval __user *tvp)
sys_semctl	syscalls.h	/^asmlinkage long sys_semctl(int semid, int semnum, int cmd, unsigned long arg);$/;"	signature:(int semid, int semnum, int cmd, unsigned long arg)
sys_semget	syscalls.h	/^asmlinkage long sys_semget(key_t key, int nsems, int semflg);$/;"	signature:(key_t key, int nsems, int semflg)
sys_semop	syscalls.h	/^asmlinkage long sys_semop(int semid, struct sembuf __user *sops,$/;"	signature:(int semid, struct sembuf __user *sops, unsigned nsops)
sys_semtimedop	syscalls.h	/^asmlinkage long sys_semtimedop(int semid, struct sembuf __user *sops,$/;"	signature:(int semid, struct sembuf __user *sops, unsigned nsops, const struct timespec __user *timeout)
sys_send	syscalls.h	/^asmlinkage long sys_send(int, void __user *, size_t, unsigned);$/;"	signature:(int, void __user *, size_t, unsigned)
sys_sendfile	syscalls.h	/^asmlinkage long sys_sendfile(int out_fd, int in_fd,$/;"	signature:(int out_fd, int in_fd, off_t __user *offset, size_t count)
sys_sendfile64	syscalls.h	/^asmlinkage long sys_sendfile64(int out_fd, int in_fd,$/;"	signature:(int out_fd, int in_fd, loff_t __user *offset, size_t count)
sys_sendmmsg	syscalls.h	/^asmlinkage long sys_sendmmsg(int fd, struct mmsghdr __user *msg,$/;"	signature:(int fd, struct mmsghdr __user *msg, unsigned int vlen, unsigned flags)
sys_sendmsg	syscalls.h	/^asmlinkage long sys_sendmsg(int fd, struct msghdr __user *msg, unsigned flags);$/;"	signature:(int fd, struct msghdr __user *msg, unsigned flags)
sys_sendto	syscalls.h	/^asmlinkage long sys_sendto(int, void __user *, size_t, unsigned,$/;"	signature:(int, void __user *, size_t, unsigned, struct sockaddr __user *, int)
sys_set_mempolicy	syscalls.h	/^asmlinkage long sys_set_mempolicy(int mode, unsigned long __user *nmask,$/;"	signature:(int mode, unsigned long __user *nmask, unsigned long maxnode)
sys_set_robust_list	syscalls.h	/^asmlinkage long sys_set_robust_list(struct robust_list_head __user *head,$/;"	signature:(struct robust_list_head __user *head, size_t len)
sys_set_tid_address	syscalls.h	/^asmlinkage long sys_set_tid_address(int __user *tidptr);$/;"	signature:(int __user *tidptr)
sys_setdomainname	syscalls.h	/^asmlinkage long sys_setdomainname(char __user *name, int len);$/;"	signature:(char __user *name, int len)
sys_setfsgid	syscalls.h	/^asmlinkage long sys_setfsgid(gid_t gid);$/;"	signature:(gid_t gid)
sys_setfsgid16	syscalls.h	/^asmlinkage long sys_setfsgid16(old_gid_t gid);$/;"	signature:(old_gid_t gid)
sys_setfsuid	syscalls.h	/^asmlinkage long sys_setfsuid(uid_t uid);$/;"	signature:(uid_t uid)
sys_setfsuid16	syscalls.h	/^asmlinkage long sys_setfsuid16(old_uid_t uid);$/;"	signature:(old_uid_t uid)
sys_setgid	syscalls.h	/^asmlinkage long sys_setgid(gid_t gid);$/;"	signature:(gid_t gid)
sys_setgid16	syscalls.h	/^asmlinkage long sys_setgid16(old_gid_t gid);$/;"	signature:(old_gid_t gid)
sys_setgroups	syscalls.h	/^asmlinkage long sys_setgroups(int gidsetsize, gid_t __user *grouplist);$/;"	signature:(int gidsetsize, gid_t __user *grouplist)
sys_setgroups16	syscalls.h	/^asmlinkage long sys_setgroups16(int gidsetsize, old_gid_t __user *grouplist);$/;"	signature:(int gidsetsize, old_gid_t __user *grouplist)
sys_sethostname	syscalls.h	/^asmlinkage long sys_sethostname(char __user *name, int len);$/;"	signature:(char __user *name, int len)
sys_setitimer	syscalls.h	/^asmlinkage long sys_setitimer(int which,$/;"	signature:(int which, struct itimerval __user *value, struct itimerval __user *ovalue)
sys_setns	syscalls.h	/^asmlinkage long sys_setns(int fd, int nstype);$/;"	signature:(int fd, int nstype)
sys_setpgid	syscalls.h	/^asmlinkage long sys_setpgid(pid_t pid, pid_t pgid);$/;"	signature:(pid_t pid, pid_t pgid)
sys_setpriority	syscalls.h	/^asmlinkage long sys_setpriority(int which, int who, int niceval);$/;"	signature:(int which, int who, int niceval)
sys_setregid	syscalls.h	/^asmlinkage long sys_setregid(gid_t rgid, gid_t egid);$/;"	signature:(gid_t rgid, gid_t egid)
sys_setregid16	syscalls.h	/^asmlinkage long sys_setregid16(old_gid_t rgid, old_gid_t egid);$/;"	signature:(old_gid_t rgid, old_gid_t egid)
sys_setresgid	syscalls.h	/^asmlinkage long sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid);$/;"	signature:(gid_t rgid, gid_t egid, gid_t sgid)
sys_setresgid16	syscalls.h	/^asmlinkage long sys_setresgid16(old_gid_t rgid, old_gid_t egid, old_gid_t sgid);$/;"	signature:(old_gid_t rgid, old_gid_t egid, old_gid_t sgid)
sys_setresuid	syscalls.h	/^asmlinkage long sys_setresuid(uid_t ruid, uid_t euid, uid_t suid);$/;"	signature:(uid_t ruid, uid_t euid, uid_t suid)
sys_setresuid16	syscalls.h	/^asmlinkage long sys_setresuid16(old_uid_t ruid, old_uid_t euid, old_uid_t suid);$/;"	signature:(old_uid_t ruid, old_uid_t euid, old_uid_t suid)
sys_setreuid	syscalls.h	/^asmlinkage long sys_setreuid(uid_t ruid, uid_t euid);$/;"	signature:(uid_t ruid, uid_t euid)
sys_setreuid16	syscalls.h	/^asmlinkage long sys_setreuid16(old_uid_t ruid, old_uid_t euid);$/;"	signature:(old_uid_t ruid, old_uid_t euid)
sys_setrlimit	syscalls.h	/^asmlinkage long sys_setrlimit(unsigned int resource,$/;"	signature:(unsigned int resource, struct rlimit __user *rlim)
sys_setsid	syscalls.h	/^asmlinkage long sys_setsid(void);$/;"	signature:(void)
sys_setsockopt	syscalls.h	/^asmlinkage long sys_setsockopt(int fd, int level, int optname,$/;"	signature:(int fd, int level, int optname, char __user *optval, int optlen)
sys_settimeofday	syscalls.h	/^asmlinkage long sys_settimeofday(struct timeval __user *tv,$/;"	signature:(struct timeval __user *tv, struct timezone __user *tz)
sys_setuid	syscalls.h	/^asmlinkage long sys_setuid(uid_t uid);$/;"	signature:(uid_t uid)
sys_setuid16	syscalls.h	/^asmlinkage long sys_setuid16(old_uid_t uid);$/;"	signature:(old_uid_t uid)
sys_setxattr	syscalls.h	/^asmlinkage long sys_setxattr(const char __user *path, const char __user *name,$/;"	signature:(const char __user *path, const char __user *name, const void __user *value, size_t size, int flags)
sys_sgetmask	syscalls.h	/^asmlinkage long sys_sgetmask(void);$/;"	signature:(void)
sys_shmat	syscalls.h	/^asmlinkage long sys_shmat(int shmid, char __user *shmaddr, int shmflg);$/;"	signature:(int shmid, char __user *shmaddr, int shmflg)
sys_shmctl	syscalls.h	/^asmlinkage long sys_shmctl(int shmid, int cmd, struct shmid_ds __user *buf);$/;"	signature:(int shmid, int cmd, struct shmid_ds __user *buf)
sys_shmdt	syscalls.h	/^asmlinkage long sys_shmdt(char __user *shmaddr);$/;"	signature:(char __user *shmaddr)
sys_shmget	syscalls.h	/^asmlinkage long sys_shmget(key_t key, size_t size, int flag);$/;"	signature:(key_t key, size_t size, int flag)
sys_shutdown	syscalls.h	/^asmlinkage long sys_shutdown(int, int);$/;"	signature:(int, int)
sys_sigaction	syscalls.h	/^asmlinkage long sys_sigaction(int, const struct old_sigaction __user *,$/;"	signature:(int, const struct old_sigaction __user *, struct old_sigaction __user *)
sys_sigaltstack	syscalls.h	/^asmlinkage long sys_sigaltstack(const struct sigaltstack __user *uss,$/;"	signature:(const struct sigaltstack __user *uss, struct sigaltstack __user *uoss)
sys_signal	syscalls.h	/^asmlinkage long sys_signal(int sig, __sighandler_t handler);$/;"	signature:(int sig, __sighandler_t handler)
sys_signalfd	syscalls.h	/^asmlinkage long sys_signalfd(int ufd, sigset_t __user *user_mask, size_t sizemask);$/;"	signature:(int ufd, sigset_t __user *user_mask, size_t sizemask)
sys_signalfd4	syscalls.h	/^asmlinkage long sys_signalfd4(int ufd, sigset_t __user *user_mask, size_t sizemask, int flags);$/;"	signature:(int ufd, sigset_t __user *user_mask, size_t sizemask, int flags)
sys_sigpending	syscalls.h	/^asmlinkage long sys_sigpending(old_sigset_t __user *set);$/;"	signature:(old_sigset_t __user *set)
sys_sigprocmask	syscalls.h	/^asmlinkage long sys_sigprocmask(int how, old_sigset_t __user *set,$/;"	signature:(int how, old_sigset_t __user *set, old_sigset_t __user *oset)
sys_sigsuspend	syscalls.h	/^asmlinkage long sys_sigsuspend(int unused1, int unused2, old_sigset_t mask);$/;"	signature:(int unused1, int unused2, old_sigset_t mask)
sys_sigsuspend	syscalls.h	/^asmlinkage long sys_sigsuspend(old_sigset_t mask);$/;"	signature:(old_sigset_t mask)
sys_socket	syscalls.h	/^asmlinkage long sys_socket(int, int, int);$/;"	signature:(int, int, int)
sys_socketcall	syscalls.h	/^asmlinkage long sys_socketcall(int call, unsigned long __user *args);$/;"	signature:(int call, unsigned long __user *args)
sys_socketpair	syscalls.h	/^asmlinkage long sys_socketpair(int, int, int, int __user *);$/;"	signature:(int, int, int, int __user *)
sys_splice	syscalls.h	/^asmlinkage long sys_splice(int fd_in, loff_t __user *off_in,$/;"	signature:(int fd_in, loff_t __user *off_in, int fd_out, loff_t __user *off_out, size_t len, unsigned int flags)
sys_spu_create	syscalls.h	/^asmlinkage long sys_spu_create(const char __user *name,$/;"	signature:(const char __user *name, unsigned int flags, umode_t mode, int fd)
sys_spu_run	syscalls.h	/^asmlinkage long sys_spu_run(int fd, __u32 __user *unpc,$/;"	signature:(int fd, __u32 __user *unpc, __u32 __user *ustatus)
sys_ssetmask	syscalls.h	/^asmlinkage long sys_ssetmask(int newmask);$/;"	signature:(int newmask)
sys_stat	syscalls.h	/^asmlinkage long sys_stat(const char __user *filename,$/;"	signature:(const char __user *filename, struct __old_kernel_stat __user *statbuf)
sys_stat64	syscalls.h	/^asmlinkage long sys_stat64(const char __user *filename,$/;"	signature:(const char __user *filename, struct stat64 __user *statbuf)
sys_statfs	syscalls.h	/^asmlinkage long sys_statfs(const char __user * path,$/;"	signature:(const char __user * path, struct statfs __user *buf)
sys_statfs64	syscalls.h	/^asmlinkage long sys_statfs64(const char __user *path, size_t sz,$/;"	signature:(const char __user *path, size_t sz, struct statfs64 __user *buf)
sys_stime	syscalls.h	/^asmlinkage long sys_stime(time_t __user *tptr);$/;"	signature:(time_t __user *tptr)
sys_swapoff	syscalls.h	/^asmlinkage long sys_swapoff(const char __user *specialfile);$/;"	signature:(const char __user *specialfile)
sys_swapon	syscalls.h	/^asmlinkage long sys_swapon(const char __user *specialfile, int swap_flags);$/;"	signature:(const char __user *specialfile, int swap_flags)
sys_symlink	syscalls.h	/^asmlinkage long sys_symlink(const char __user *old, const char __user *new);$/;"	signature:(const char __user *old, const char __user *new)
sys_symlinkat	syscalls.h	/^asmlinkage long sys_symlinkat(const char __user * oldname,$/;"	signature:(const char __user * oldname, int newdfd, const char __user * newname)
sys_sync	syscalls.h	/^asmlinkage long sys_sync(void);$/;"	signature:(void)
sys_sync_file_range	syscalls.h	/^asmlinkage long sys_sync_file_range(int fd, loff_t offset, loff_t nbytes,$/;"	signature:(int fd, loff_t offset, loff_t nbytes, unsigned int flags)
sys_sync_file_range2	syscalls.h	/^asmlinkage long sys_sync_file_range2(int fd, unsigned int flags,$/;"	signature:(int fd, unsigned int flags, loff_t offset, loff_t nbytes)
sys_syncfs	syscalls.h	/^asmlinkage long sys_syncfs(int fd);$/;"	signature:(int fd)
sys_sysctl	syscalls.h	/^asmlinkage long sys_sysctl(struct __sysctl_args __user *args);$/;"	signature:(struct __sysctl_args __user *args)
sys_sysfs	syscalls.h	/^asmlinkage long sys_sysfs(int option,$/;"	signature:(int option, unsigned long arg1, unsigned long arg2)
sys_sysinfo	syscalls.h	/^asmlinkage long sys_sysinfo(struct sysinfo __user *info);$/;"	signature:(struct sysinfo __user *info)
sys_syslog	syscalls.h	/^asmlinkage long sys_syslog(int type, char __user *buf, int len);$/;"	signature:(int type, char __user *buf, int len)
sys_tee	syscalls.h	/^asmlinkage long sys_tee(int fdin, int fdout, size_t len, unsigned int flags);$/;"	signature:(int fdin, int fdout, size_t len, unsigned int flags)
sys_tgkill	syscalls.h	/^asmlinkage long sys_tgkill(int tgid, int pid, int sig);$/;"	signature:(int tgid, int pid, int sig)
sys_time	syscalls.h	/^asmlinkage long sys_time(time_t __user *tloc);$/;"	signature:(time_t __user *tloc)
sys_timer_create	syscalls.h	/^asmlinkage long sys_timer_create(clockid_t which_clock,$/;"	signature:(clockid_t which_clock, struct sigevent __user *timer_event_spec, timer_t __user * created_timer_id)
sys_timer_delete	syscalls.h	/^asmlinkage long sys_timer_delete(timer_t timer_id);$/;"	signature:(timer_t timer_id)
sys_timer_getoverrun	syscalls.h	/^asmlinkage long sys_timer_getoverrun(timer_t timer_id);$/;"	signature:(timer_t timer_id)
sys_timer_gettime	syscalls.h	/^asmlinkage long sys_timer_gettime(timer_t timer_id,$/;"	signature:(timer_t timer_id, struct itimerspec __user *setting)
sys_timer_settime	syscalls.h	/^asmlinkage long sys_timer_settime(timer_t timer_id, int flags,$/;"	signature:(timer_t timer_id, int flags, const struct itimerspec __user *new_setting, struct itimerspec __user *old_setting)
sys_timerfd_create	syscalls.h	/^asmlinkage long sys_timerfd_create(int clockid, int flags);$/;"	signature:(int clockid, int flags)
sys_timerfd_gettime	syscalls.h	/^asmlinkage long sys_timerfd_gettime(int ufd, struct itimerspec __user *otmr);$/;"	signature:(int ufd, struct itimerspec __user *otmr)
sys_timerfd_settime	syscalls.h	/^asmlinkage long sys_timerfd_settime(int ufd, int flags,$/;"	signature:(int ufd, int flags, const struct itimerspec __user *utmr, struct itimerspec __user *otmr)
sys_times	syscalls.h	/^asmlinkage long sys_times(struct tms __user *tbuf);$/;"	signature:(struct tms __user *tbuf)
sys_tkill	syscalls.h	/^asmlinkage long sys_tkill(int pid, int sig);$/;"	signature:(int pid, int sig)
sys_truncate	syscalls.h	/^asmlinkage long sys_truncate(const char __user *path, long length);$/;"	signature:(const char __user *path, long length)
sys_truncate64	syscalls.h	/^asmlinkage long sys_truncate64(const char __user *path, loff_t length);$/;"	signature:(const char __user *path, loff_t length)
sys_umask	syscalls.h	/^asmlinkage long sys_umask(int mask);$/;"	signature:(int mask)
sys_umount	syscalls.h	/^asmlinkage long sys_umount(char __user *name, int flags);$/;"	signature:(char __user *name, int flags)
sys_uname	syscalls.h	/^asmlinkage long sys_uname(struct old_utsname __user *);$/;"	signature:(struct old_utsname __user *)
sys_unlink	syscalls.h	/^asmlinkage long sys_unlink(const char __user *pathname);$/;"	signature:(const char __user *pathname)
sys_unlinkat	syscalls.h	/^asmlinkage long sys_unlinkat(int dfd, const char __user * pathname, int flag);$/;"	signature:(int dfd, const char __user * pathname, int flag)
sys_unshare	syscalls.h	/^asmlinkage long sys_unshare(unsigned long unshare_flags);$/;"	signature:(unsigned long unshare_flags)
sys_uselib	syscalls.h	/^asmlinkage long sys_uselib(const char __user *library);$/;"	signature:(const char __user *library)
sys_ustat	syscalls.h	/^asmlinkage long sys_ustat(unsigned dev, struct ustat __user *ubuf);$/;"	signature:(unsigned dev, struct ustat __user *ubuf)
sys_utime	syscalls.h	/^asmlinkage long sys_utime(char __user *filename,$/;"	signature:(char __user *filename, struct utimbuf __user *times)
sys_utimensat	syscalls.h	/^asmlinkage long sys_utimensat(int dfd, const char __user *filename,$/;"	signature:(int dfd, const char __user *filename, struct timespec __user *utimes, int flags)
sys_utimes	syscalls.h	/^asmlinkage long sys_utimes(char __user *filename,$/;"	signature:(char __user *filename, struct timeval __user *utimes)
sys_vfork	syscalls.h	/^asmlinkage long sys_vfork(void);$/;"	signature:(void)
sys_vhangup	syscalls.h	/^asmlinkage long sys_vhangup(void);$/;"	signature:(void)
sys_vmsplice	syscalls.h	/^asmlinkage long sys_vmsplice(int fd, const struct iovec __user *iov,$/;"	signature:(int fd, const struct iovec __user *iov, unsigned long nr_segs, unsigned int flags)
sys_wait4	syscalls.h	/^asmlinkage long sys_wait4(pid_t pid, int __user *stat_addr,$/;"	signature:(pid_t pid, int __user *stat_addr, int options, struct rusage __user *ru)
sys_waitid	syscalls.h	/^asmlinkage long sys_waitid(int which, pid_t pid,$/;"	signature:(int which, pid_t pid, struct siginfo __user *infop, int options, struct rusage __user *ru)
sys_waitpid	syscalls.h	/^asmlinkage long sys_waitpid(pid_t pid, int __user *stat_addr, int options);$/;"	signature:(pid_t pid, int __user *stat_addr, int options)
sys_write	syscalls.h	/^asmlinkage long sys_write(unsigned int fd, const char __user *buf,$/;"	signature:(unsigned int fd, const char __user *buf, size_t count)
sys_writev	syscalls.h	/^asmlinkage long sys_writev(unsigned long fd,$/;"	signature:(unsigned long fd, const struct iovec __user *vec, unsigned long vlen)
